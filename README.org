This project is still pretty much work in progress so it might introduce many breaking changes.
* Introduction
  Basketball analytics using play-by-play data have been an shared interest for many people. However, the lack of processed play-by-play has prohibited such analysis by many.

  This project is intended to be provided for parsing for the play-by-play data from http://stats.nba.com into more comprehensive format imitating those on http://nbastuffer.com. While there are some limitations with the current parsing strategy, it does not affect the tabulation of APM and other playb-by-play based metrics.

  The package also supports lineup analysis to better understand the behavior of lineups of the NBA teams.

  The project is developed with flexibility in mind. Extension and customized behavior can be achieved easily should you require those.

* Set up the environment
  I use Conda for managing Python virtual environment, but virtualenv is fine
* My notes
  #+name playbyplay-parameters
  #+begin_src json
    "parameters": {
        "Direction": "DESC",
        "Sorter": "PTS",
        "Counter": 1000,
        "PlayerOrTeam": "T",
        "SeasonType": "Regular Season",
        "Season": "2015-16",
        "LeagueID": "00"
    },
    "resource": "leaguegamelog"
  #+end_src
  This can readily become query parameters for other resources (such as playbyplay data)

** Columns of PlayByPlay
    | SEASON_ID         |
    | TEAM_ID           |
    | TEAM_ABBREVIATION |
    | TEAM_NAME         |
    | GAME_ID           |
    | GAME_DATE         |
    | MATCHUP           |
    | WL                |
    | MIN               |
    | FGM               |
    | FGA               |
    | FG_PCT            |
    | FG3M              |
    | FG3A              |
    | FG3_PCT           |
    | FTM               |
    | FTA               |
    | FT_PCT            |
    | OREB              |
    | DREB              |
    | REB               |
    | AST               |
    | STL               |
    | BLK               |
    | TOV               |
    | PF                |
    | PTS               |
    | PLUS_MINUS        |
    | VIDEO_AVAILABLE   |

** Columns of LeagueGameLog
   Here are the columns for the LeagueGameLog
* Luigi Tasks
  you can have these columns in your play-by-play CSVs
| h1 | h2 | h3 | h4 | h5 | a1 | a2 | a3 | a4 | a5 | game_id | period | away_score | home_score | remaining_time | elapsed | play_length | play_id | team | event_type | away | home | block | entered | left | num | opponent | outof | player | points | possession | reason | result | steal | type | shot_distance | original_x | original_y | converted_x | converted_y | description |

* TODOs
  - parse subtypes of events. (e.g. when there is a shot, is it a layup or jumpshot? the raw data provides different codes for these subtypes but I have not yet figured out a way to easily decrypt all of them.)
